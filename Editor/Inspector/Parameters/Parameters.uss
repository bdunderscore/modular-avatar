VisualElement {}


/* I hate CSS precedence rules... */
.horizontal .no-left-margin {
    margin-left: 0 !important;
}

.horizontal .no-left-margin.unity-label {
    margin-left: 0 !important;
}

.horizontal .no-left-margin Label.unity-label {
    margin-left: 0 !important;
}

.horizontal > Label {
    height: auto;
}

.horizontal > * {
    margin-top: 0;
    margin-bottom: 0;
}

.v-separator {
    width: 1px;
    height: 100%;
    margin-left: 8px;
    margin-right: 8px;
    justify-content: center;
    align-content: center;
    flex-shrink: 0;
}

.v-separator VisualElement {
    width: 100%;
    height: 80%;
    background-color: rgba(0, 0, 0, 0.4);
}

.horizontal TextField {
    margin-left: 0px;
}

.horizontal TextField Label.unity-label {
    margin-left: 0px !important;
}

.horizontal Label {
    padding-top: 0;
    padding-bottom: 0;
    align-self: center;
}

.horizontal {
    flex-direction: row;
    align-content: center;
}

.horizontal > * {
    height: 100%;
}

.no-label Label.unity-base-field__label {
    display: none;
}

#Root .horizontal #f-rename-destination {
    flex-grow: 1;
}

.inner-label > Label {
    margin-left: 6px;
    display: none;
}

.small-label Label.unity-label {
    min-width: 0;
    margin-left: 4px;
}

VisualElement.small-label > * {
    flex-grow: 0;
}

VisualElement.small-label > PropertyField {
    flex-direction: row;
}

#Root #f-name {
    flex-grow: 1;
}

#Root DefaultValueField {
    width: 60px;
    flex-grow: 0;
}

.st-internal-parameter .hide-with-internal-param {
    display: none;
}

DefaultValueField DropdownField {
    display: none;
}

.st-ty-Bool DefaultValueField DropdownField {
    display: flex;
}

.st-ty-Bool DefaultValueField TextField {
    display: none;
}

.st-ty-NotSynced DefaultValueField {
    display: none;
}

.st-pb-prefix .st-pb-prefix__hide {
    display: none;
}

#f-remap-to {
    flex-grow: 1;
}

/** Ghostly text for the renameTo text box **/
Label#f-default-param {
    position: absolute;
    width: 100%;
    height: 100%
    margin: 0 0 0 0;
    overflow: hidden;
    color: rgba(255, 255, 255, 0.4) !important;
}