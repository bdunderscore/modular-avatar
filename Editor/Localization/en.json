{
  "test0.test_a": "test_a",
  "test0.test_b": "test_b",
  "boneproxy.foldout.advanced": "Advanced",
  "boneproxy.target": "Target",
  "menuinstall.help.hint_set_menu": "This prefab will be installed to the root menu of your avatar by default. Select a different menu or uncheck the component's enabled checkbox to prevent this.",
  "menuinstall.help.hint_bad_menu": "Selected menu asset is not part of your avatar.",
  "menuinstall.installto": "Install To",
  "menuinstall.installto.tooltip": "The controls for this prefab will be appended to this menu",
  "menuinstall.selectmenu": "Select Menu",
  "menuinstall.showcontents": "Show menu contents",
  "menuinstall.showcontents.notselected": "No menu selected",
  "menuinstall.devoptions": "Prefab Developer Options",
  "menuinstall.menu_icon_too_large": "The icon set in the menu is too large than 256 pixels.",
  "menuinstall.menu_icon_uncompressed": "The icon set in the menu is not set for compression.",
  "menuinstall.srcmenu": "Menu to Install",
  "params.autodetect_header": "   Autodetected Parameters   ",
  "params.internal": "Internal",
  "params.pb_prefix": "PhysBones Prefix",
  "params.syncmode": "Param type",
  "params.saved": "Saved",
  "params.synced": "Synced",
  "params.default": "Default value",
  "params.fieldname": "Field name",
  "params.remapto": "Remap to",
  "params.remapto.tooltip": "Enter a new name for this parameter here to resolve name conflicts",
  "params.devmode": "Show Prefab Developer Options",
  "params.syncmode.NotSynced": "Animator Only",
  "params.syncmode.Int": "Int",
  "params.syncmode.Float": "Float",
  "params.syncmode.Bool": "Bool",
  "merge_armature.merge_target": "Merge Target",
  "merge_armature.merge_target.tooltip": "The armature (or subtree) to merge this object into",
  "merge_armature.prefix": "Prefix",
  "merge_armature.prefix.tooltip": "Prefix expected on bones in this merged armature",
  "merge_armature.suffix": "Suffix",
  "merge_armature.suffix.tooltip": "Suffix expected on bones in this merged armature",
  "merge_armature.locked": "Lock position",
  "merge_armature.locked.tooltip": "Lock the position of this armature's bones to the target armature (and vice versa). Useful for creating animations.",
  "merge_armature.adjust_names": "Adjust bone names to match target",
  "merge_armature.adjust_names.tooltip": "Changes bone names to match the target avatar. Useful for porting outfits from one avatar to another.",
  "merge_armature.mangle_names": "Avoid name collisions",
  "merge_armature.mangle_names.tooltip": "Avoid name collisions with other assets by mangling newly added bone names.",
  "path_mode.Relative": "Relative to this object",
  "path_mode.Absolute": "Absolute (based on avatar root)",
  "merge_animator.animator": "Animator to merge",
  "merge_animator.layer_type": "Layer Type",
  "merge_animator.delete_attached_animator": "Delete attached animator",
  "merge_animator.delete_attached_animator.tooltip": "Delete the animator attached to this object after merging",
  "merge_animator.path_mode": "Path Mode",
  "merge_animator.path_mode.tooltip": "How to interpret paths in animations. Using relative mode lets you record animations from an animator on this object.",
  "merge_animator.match_avatar_write_defaults": "Match Avatar Write Defaults",
  "merge_animator.match_avatar_write_defaults.tooltip": "Match the write defaults setting used on the avatar's animator. If the avatar's write defaults settings are inconsistent, the settings on the animator will be left alone.",
   
  "merge_armature.lockmode": "Position sync mode",
  "merge_armature.lockmode.not_locked.title": "Not locked",
  "merge_armature.lockmode.not_locked.body": "Merged armature does not sync its position with the base avatar.",
  "merge_armature.lockmode.base_to_merge.title": "Avatar  =====> Target (Unidirectional)",
  "merge_armature.lockmode.base_to_merge.body": "Moving the base avatar will move the merge armature. If you move the merged armature, it will not affect the base avatar. This is useful when adding normal outfits, where you might want to adjust the position of bones in the outfit.",
  "merge_armature.lockmode.bidirectional.title": "Avatar <=====> Target (Bidirectional)",
  "merge_armature.lockmode.bidirectional.body": "The base armature and the merged armature will always have the same position. This is useful when creating animations that are meant to target the base armature. In order to activate this, your armatures must already be in the exact same position.",
  "merge_armature.reset_pos": "Reset position to base avatar",
  "merge_armature.reset_pos.info": "This command will force the position of all bones in the outfit to match that of the base avatar. This can be helpful as a starting point for installing outfits not set up for your current avatar.",
  "merge_armature.reset_pos.adjust_rotation": "Also set rotation to base avatar",
  "merge_armature.reset_pos.adjust_scale": "Also set local scale to base avatar",
  "merge_armature.reset_pos.execute": "Do it!",
  "merge_armature.reset_pos.heuristic_scale": "Adjust outfit overall scale to match base avatar",
  "merge_armature.reset_pos.heuristic_scale.tooltip": "Will set the overall scale of the outfit as a whole based on armspan measurements. Recommended for setting up outfits.",
  
  "worldfixed.quest": "This component is not compatible with the standalone Oculus Quest and will have no effect.",
  "worldfixed.normal": "This object will be fixed to world unless you fixed to avatar with constraint.",
  "fpvisible.normal": "This object will be visible in your first person view.",
  "fpvisible.NotUnderHead": "This component has no effect when not placed under the head bone.",
  "fpvisible.quest": "This component is not compatible with the standalone Oculus Quest and will have no effect.",
  "fpvisible.InPhysBoneChain": "This object is controlled by a Physics Bone chain and cannot be made visible in first person safely. Select the start of the chain instead.",
  "blendshape.mesh": "Mesh",
  "blendshape.source": "Source blendshape",
  "blendshape.target": "Target blendshape",
  "hint.not_in_avatar": "This component needs to be placed inside your avatar to work properly.",
  "boneproxy.err.MovingTarget": "You cannot specify a target object that will be moved by other Modular Avatar components",
  "boneproxy.err.NotInAvatar": "You must specify an object that is in the avatar",
  "boneproxy.attachment": "Attachment mode",
  "boneproxy.attachment.AsChildAtRoot": "As child; at root",
  "boneproxy.attachment.AsChildKeepWorldPose": "As child; keep position and rotation",
  "boneproxy.attachment.AsChildKeepPosition": "As child; keep position",
  "boneproxy.attachment.AsChildKeepRotation": "As child; keep rotation",
  "mesh_settings.header_probe_anchor": "Anchor Override Configuration",
  "mesh_settings.inherit_probe_anchor": "Anchor Override Mode",
  "mesh_settings.probe_anchor": "Anchor Override",
  "mesh_settings.probe_anchor.tooltip": "Sets the anchor override used for lighting calculations for renderers inside this object",
  "mesh_settings.header_bounds": "Bounds Override Configuration",
  "mesh_settings.inherit_bounds": "Bounds Override Mode",
  "mesh_settings.root_bone": "Root Bone",
  "mesh_settings.root_bone.tooltip": "The root bone of the mesh. This is used as a reference point from which to calculate the bounds of the mesh.",
  "mesh_settings.bounds": "Bounds",
  "mesh_settings.bounds.tooltip": "The bounds of the mesh. This is used to determine when rendering can be skipped for an offscreen mesh.",
  "mesh_settings.inherit_mode.Inherit": "Inherit",
  "mesh_settings.inherit_mode.Set": "Set",
  "mesh_settings.inherit_mode.DontSet": "Don't Set (use mesh as-is)",
  "pb_blocker.help": "This object will not be affected by PhysBones attached to parents.",
  "hint.bad_vrcsdk": "Incompatible version of VRCSDK detected.\n\nPlease try upgrading your VRCSDK; if this does not work, check for a newer version of Modular Avatar as well.",
  "error.stack_trace": "Stack trace (provide this when reporting bugs!)",
  "error.merge_armature.merge_into_self": "Your Merge Armature component is referencing itself, or a child of itself, as the merge target. You should reference the avatar's armature instead. Do not put Merge Armature on the avatar's main armature.",
  "error.merge_armature.physbone_on_humanoid_bone": "Some Humanoid bones in the armature to merge are controlled by PhysBones, and can't be merged properly because its position is different from the corresponding Humanoid bone in the merge target. You should remove the PhysBones on those Humanoid bones in the armature to merge.",
  "error.internal_error": "An internal error has occurred: {0}\nwhen processing:",
  "error.merge_animator.param_type_mismatch": "Parameter {0} has multiple types: {1} != {2}",
  "error.rename_params.too_many_synced_params": "Too many synced parameters: Cost {0} > {1}",
  "validation.blendshape_sync.no_local_renderer": "No renderer found on this object",
  "validation.blendshape_sync.no_local_mesh": "No mesh found on the renderer on this object",
  "validation.blendshape_sync.no_bindings": "No blendshape bindings found on this object",
  "validation.blendshape_sync.missing_local_shape": "Missing local blendshape: {0}",
  "validation.blendshape_sync.missing_target_shape": "Missing target blendshape: {0}",
  "validation.blendshape_sync.no_target": "No target object specified",
  "validation.blendshape_sync.missing_target_renderer": "No renderer found on the target object",
  "validation.blendshape_sync.missing_target_mesh": "No mesh found on the renderer on the target object",
  "validation.bone_proxy.no_target": "No target object specified (or target object not found)",
  "validation.menu_installer.no_menu": "No menu to install specified",
  "validation.merge_animator.no_animator": "No animator to merge specified",
  "validation.merge_armature.no_target": "No merge target specified",
  "validation.merge_armature.target_is_child": "Merge target cannot be a child of this object",
  "submenu_source.Children": "Children",
  "submenu_source.MenuAsset": "Expressions Menu Asset",
  "menuitem.showcontents": "Show menu contents",
  "menuitem.prop.name": "Name",
  "menuitem.prop.icon": "Icon",
  "menuitem.prop.icon.tooltip": "(Optional) The icon to be shown in the expressions menu",
  "menuitem.prop.type": "Type",
  "menuitem.prop.type.tooltip": "The type of this item",
  "menuitem.prop.value": "Value",
  "menuitem.prop.value.tooltip": "The value to set the parameter to when this control is used",
  "menuitem.prop.parameter": "Parameter",
  "menuitem.prop.label": "Label",
  "menuitem.prop.submenu_asset": "Submenu Asset",
  "menuitem.prop.submenu_asset.tooltip": "The asset to use as the submenu",
  "menuitem.prop.submenu_source": "Submenu Source",
  "menuitem.prop.submenu_source.tooltip": "Where to find the items to put inside this submenu",
  "menuitem.prop.source_override": "Source object override",
  "menuitem.prop.source_override.tooltip": "If specified, this object will be used as the source for the contents of the submenu. Otherwise, children of this menu item will be used.",
  "menuitem.prop.is_saved": "Saved",
  "menuitem.prop.is_saved.tooltip": "If true, the value of this menu item will be saved when you change avatars or worlds.",
  "menuitem.prop.is_synced": "Synced",
  "menuitem.prop.is_synced.tooltip": "If true, the value of this menu item will be synced to other players across the network.",
  "menuitem.param.rotation": "Parameter: Rotation",
  "menuitem.param.rotation.tooltip": "The parameter to set based on the rotation of this menu item",
  "menuitem.param.horizontal": "Parameter: Horizontal",
  "menuitem.param.horizontal.tooltip": "The parameter to set based on the horizontal position of the thumbstick",
  "menuitem.param.vertical": "Parameter: Vertical",
  "menuitem.param.vertical.tooltip": "The parameter to set based on the vertical position of the thumbstick",
  "menuitem.label.control_labels_and_params": "Control Labels and Parameters",
  "menuitem.label.control_labels": "Control Labels",
  "menuitem.misc.multiple": "(multiple)",
  "menuitem.misc.no_icon": "(no icon)",
  "menuitem.misc.extract": "Extract to objects",
  "menuitem.label.parameters": "Parameters",
  "action.toggle_object.header.object": "Object to show/hide",
  "action.toggle_object.header.show": "Show",
  "menu_tree.title": "Select menu",
  "menuitem.param.controlled_by_action": "<controlled by action>",
  "control_group.foldout.actions": "Actions",
  "control_group.foldout.menu_items": "Bound menu items",
  "control_group.is_saved": "Saved",
  "control_group.is_saved.tooltip": "If true, the value of this menu item will be saved when you change avatars or worlds.",
  "control_group.is_synced": "Synced",
  "control_group.is_synced.tooltip": "If true, the value of this menu item will be synced to other players across the network.",
  "control_group.default_value": "Initial setting",
  "control_group.default_value.unset": "(none selected)",
  "menuitem.prop.control_group": "Control Group",
  "menuitem.prop.control_group.tooltip": "Only one toggle in a given group can be selected at the same time",
  "menuitem.prop.is_default": "Is Group Default",
  "animation_gen.duplicate_binding": "Controls from different control groups are trying to animate the same parameter. Parameter: {0}",
  "animation_gen.multiple_defaults": "Multiple default menu items were found in the same control group.",
  "menuitem.misc.add_item": "Add menu item",
  "replace_object.target_object": "Object to replace",
  "setup_outfit.err.header.notarget": "Setup outfit failed",
  "setup_outfit.err.header": "Setup Outfit failed to process {0}",
  "setup_outfit.err.unknown": "Unknown error",
  "setup_outfit.err.no_selection": "No object selected.",
  "setup_outfit.err.multiple_avatar_descriptors": "Multiple avatar descriptors found in {0} and its parents.",
  "setup_outfit.err.no_avatar_descriptor": "No avatar descriptor found in {0}'s parents. Make sure your outfit is placed inside your avatar.",
  "setup_outfit.err.no_animator": "Your avatar does not have an Animator component.",
  "setup_outfit.err.no_hips": "Your avatar does not have a Hips bone. Setup Outfit only works on humanoid avatars.",
  "setup_outfit.err.no_outfit_hips": "Unable to identify the Hips object for the outfit. Searched for objects containing the following names:",
  "move_independently.group-header": "Objects to move together"
}